<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>只出现一次的字符</title>
    <url>/2020/12/20/201220_%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%AD%97%E7%AC%A6/</url>
    <content><![CDATA[<p>数组中只有一个单个元素，其他元素成对，找到只出现一次的元素</p>
<ul>
<li>成对出现，异或 ^，O（N）</li>
<li>成对连续出现，根据奇偶性二分</li>
</ul>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bs</span>(<span class="params">arr</span>):</span></span><br><span class="line">    left, right = <span class="number">0</span>, <span class="built_in">len</span>(arr) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        mid = left + (right - left) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> mid - <span class="number">1</span> &gt;= left <span class="keyword">and</span> mid + <span class="number">1</span> &lt;= right <span class="keyword">and</span> arr[mid] != arr[mid - <span class="number">1</span>] <span class="keyword">and</span> arr[mid] != arr[mid + <span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">return</span> mid, arr[mid]</span><br><span class="line">        <span class="keyword">elif</span> mid + <span class="number">1</span> &lt;= right <span class="keyword">and</span> arr[mid] == arr[mid + <span class="number">1</span>]:</span><br><span class="line">            length = mid + <span class="number">1</span> - left + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> length % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">                right = mid - <span class="number">1</span> <span class="comment"># mid = mid + 1 且为 mid + 1 左边长度为奇数, right -&gt; mid - 1</span></span><br><span class="line">            <span class="keyword">else</span>: </span><br><span class="line">                left = mid + <span class="number">2</span>  <span class="comment"># mid = mid + 1 且为 mid + 1 右边长度为奇数, right -&gt; mid + 2</span></span><br><span class="line">                <span class="comment"># left = mid</span></span><br><span class="line">        <span class="keyword">elif</span> mid - <span class="number">1</span> &gt;= left <span class="keyword">and</span> arr[mid] == arr[mid - <span class="number">1</span>]:</span><br><span class="line">            length = mid - left + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> length % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">                right = mid - <span class="number">2</span> <span class="comment"># mid - 1 = mid 且为 mid 左边长度为奇数, right -&gt; mid -2</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left = mid + <span class="number">1</span> <span class="comment"># mid - 1 = mid 且为mid 右边长度为奇数, right -&gt; mid + 1</span></span><br><span class="line">    <span class="comment"># left = right</span></span><br><span class="line">    <span class="comment"># 【1，2，2】&amp;nbs***bsp;【1，1，2】的情况</span></span><br><span class="line">    <span class="keyword">return</span> left, arr[left]</span><br><span class="line"> </span><br><span class="line">arr = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">arr = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">5</span>]</span><br><span class="line">print(bs(arr))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CODING</category>
        <category>二分</category>
      </categories>
      <tags>
        <tag>快手</tag>
        <tag>头条</tag>
      </tags>
  </entry>
  <entry>
    <title>柱状图中的最大矩形</title>
    <url>/2020/12/20/201220_%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9F%A9%E5%BD%A2/</url>
    <content><![CDATA[<p>给定一个仅包含 0 和 1 的二维二进制矩阵，找出只包含 1 的最大矩形，并返回其面积。<br>输入:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">    [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>],</span><br><span class="line">    [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>],</span><br><span class="line">    [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>输出: 6 </p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">largestRectangleArea2</span>(<span class="params">self, heights</span>) -&gt; int:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    暴力法 O(N^2), 以 heights[i] 的高度为高，求左右满足的宽</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    lg = <span class="built_in">len</span>(heights)</span><br><span class="line">    maxx = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(lg):</span><br><span class="line">        tmp = heights[i]</span><br><span class="line">        left, right = i, i</span><br><span class="line">        <span class="keyword">while</span> left &gt; <span class="number">0</span> <span class="keyword">and</span> heights[left - <span class="number">1</span>] &gt;= heights[i]:</span><br><span class="line">            left -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> right &lt; lg - <span class="number">1</span> <span class="keyword">and</span> heights[right + <span class="number">1</span>] &gt;= heights[i]:</span><br><span class="line">            right += <span class="number">1</span></span><br><span class="line">        maxx = <span class="built_in">max</span>(tmp * (right - left + <span class="number">1</span>), maxx)</span><br><span class="line">    <span class="keyword">return</span> maxx</span><br><span class="line">     </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">largestRectangleArea</span>(<span class="params">heights</span>) -&gt; int:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    单调栈, stack 递增</span></span><br><span class="line"><span class="string">    cur 比 stack[-1]大，入栈; </span></span><br><span class="line"><span class="string">    cur 比 stack[-1]小，依次出栈至 stack[-1]小于cur</span></span><br><span class="line"><span class="string">    以出栈元素的值为高，求宽，更新最值</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    heights.append(<span class="number">0</span>) <span class="comment"># 判断最后一个元素为高的情况</span></span><br><span class="line">    lg = <span class="built_in">len</span>(heights)</span><br><span class="line">    stack = [<span class="number">0</span>]</span><br><span class="line">    maxx = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, lg):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> stack <span class="keyword">and</span> heights[stack[-<span class="number">1</span>]] &lt;= heights[i]:</span><br><span class="line">            stack.append(i)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">while</span> stack <span class="keyword">and</span> heights[stack[-<span class="number">1</span>]] &gt;= heights[i]:</span><br><span class="line">                h = heights[stack[-<span class="number">1</span>]]</span><br><span class="line">                stack.pop()</span><br><span class="line">                <span class="comment"># stack 为空，说明当前height[i] 小于 i之前所有的值</span></span><br><span class="line">                 </span><br><span class="line">                w = i <span class="keyword">if</span> <span class="keyword">not</span> stack <span class="keyword">else</span> i - (stack[-<span class="number">1</span>] + <span class="number">1</span>)</span><br><span class="line">                maxx = <span class="built_in">max</span>(maxx, h*w)</span><br><span class="line">            stack.append(i)</span><br><span class="line">    <span class="keyword">return</span> maxx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># i=3 结束时，stack = [0,3]；i=4, height[4]=0时，w = i - (0 + 1) = 3</span></span><br><span class="line">heights = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>] </span><br><span class="line">print(largestRectangleArea(heights))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CODING</category>
        <category>单调栈</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
</search>
